generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model members {
  id                       String        @id @default(cuid())
  preferedName             String?       @unique
  fullName                 String
  bio                      String
  image                    String?
  status                   String        @default("pending")
  address                  String
  createdAt                DateTime      @default(now())
  portfolio                String?
  email                    String        @unique
  mentor                   Boolean?      @default(false)
  intrests                 String?
  expetations              String?
  whatdoyoubringtothetable String?
  DOB                      DateTime?
  whatsappnumber           String        @unique
  commetmentlevel          Int?
  otp                      String?
  otpExpires               DateTime?
  verified                 Boolean       @default(false)
  framworks                framworks[]
  socials                  socials[]
  project                  project[]
  publication              publication[]
  languages                languages[]
  stack                    stack[]

  @@map("Team Members")
}

model project {
  id          String  @id @default(cuid())
  livelink    String
  image       String
  description String
  opensource  Boolean @default(false)
  githublink  String?
  members     members @relation(fields: [membersId], references: [id])
  membersId   String

  @@map("Projects")
}

model publication {
  id        String  @id @default(cuid())
  type      String
  owner     members @relation(fields: [membersId], references: [id])
  membersId String

  @@map("Publications")
}

model stack {
  id        Int     @id @default(autoincrement())
  stack     String
  users     members @relation(fields: [membersId], references: [id])
  membersId String

  @@map("Stacks")
}

model languages {
  id        Int     @id @default(autoincrement())
  language  String
  users     members @relation(fields: [membersId], references: [id])
  membersId String

  @@map("Languages")
}

model framworks {
  id        Int      @id @default(autoincrement())
  framworks String
  members   members? @relation(fields: [membersId], references: [id])
  membersId String?

  @@map("Frameworks")
}

model socials {
  id        Int     @id @default(autoincrement())
  platform  String
  url       String
  member    members @relation(fields: [membersId], references: [id])
  membersId String
}
